
/*
1. –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å "–ª—é–¥–∏", –≤ —ç—Ç–æ–º –∫–ª–∞—Å—Å–µ 4 property - "–∏–º—è", "—Ä–æ—Å—Ç", "–≤–µ—Å", "–ø–æ–ª", –∞ —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ "say(–≥–æ–≤–æ—Ä–∏—Ç)".
 */
protocol Speakers {
    func say() -> String
}

class Human {
    let name: String
    var height: Int
    var weight: Int
    let gender: String
    
    init(name: String, height: Int, weight: Int, gender: String) {
        self.name = name
        self.height = height
        self.weight = weight
        self.gender = gender
    }
    
    func say() -> String {
        return "Hello! My name is \(name)."
    }
}

/*
2. –°–æ–∑–¥–∞—Ç—å sub class (–Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏) "–ø–æ–≤–∞—Ä", "–º–µ–Ω–µ–¥–∂–µ—Ä", "–±–æ—Ä–µ—Ü" –∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Ç–æ–¥ "say(–≥–æ–≤–æ—Ä–∏—Ç)" –≤ –∫–∞–∂–¥–æ–º –∏–∑ —ç—Ç–∏—Ö –∫–ª–∞—Å—Å–æ–≤.
 */

class Cook: Human {
    override func say() -> String {
        super.say() + " I'm a cook."
    }
}

class Manager: Human {
    override func say() -> String {
        super.say() + " I'm a manager."
    }
}

class Fighter: Human {
    override func say() -> String {
        super.say() + " I'm a fighter."
    }
}


/*
3. –°–æ–∑–¥–∞—Ç—å –ø–æ –æ–¥–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É(—ç–∫–∑–µ–º–ø–ª—è—Ä—É) –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞  –∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –∏—Ö –≤ –º–∞—Å—Å–∏–≤.
 */
 
var cook = Cook(name: "Luci", height: 167, weight: 50, gender: "Female")
cook.say()

var manager = Manager(name: "Ruben", height: 175, weight: 70, gender: "Male")
var fighter = Fighter(name: "Michael", height: 170, weight: 84, gender: "Male")

var proffArray = [cook, manager, fighter]
print(proffArray)

/*
4. –í —Ü–∏–∫–ª–µ ‚Äúfor in‚Äù –ø—Ä–æ–π—Ç–∏ –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (–∏–º—è, —Ä–æ—Å—Ç –∏ —Ç–¥) –∏ —É –∫–∞–∂–¥–æ–≥–æ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ "say(–≥–æ–≤–æ—Ä–∏—Ç)".
 */

for proff in proffArray {
    print(proff.say())
}

    /*
5. –°–æ–∑–¥–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞ –æ—Ç super Class, –¥–æ–±–∞–≤–∏—Ç—å –≤ –Ω–µ–≥–æ –ø–∞—Ä—É –Ω–æ–≤—ã—Ö —Å–≤–æ–π—Å—Ç–≤, –¥–æ–±–∞–≤–∏—Ç—å –≤ –º–∞—Å—Å–∏–≤ –∏ –≤ —Ü–∏–∫–ª–µ –≤—ã–≤–æ–¥–∞ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º People.
 
6. –ú–µ—Ç–æ–¥ "say(–≥–æ–≤–æ—Ä–∏—Ç)" —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π method say, –≤—ã–ø–æ–ª–Ω—è–ª—Å—è —Å–Ω–∞—á–∞–ª–∞ –º–µ—Ç–æ–¥ say –∫–ª–∞—Å—Å–∞ People.
 */

 class Developer: Human {
 
 var speciality: String
 var exp: Double
 
    init(name: String, height: Int, weight: Int, gender: String, speciality: String, exp: Double) {
        self.speciality = speciality
        self.exp = exp
        super.init(name: name, height: (height), weight: weight, gender: gender)
    }
	
 override func say() -> String {
    super.say() + " I'm \(speciality) - developer with \(exp) years experience."
 }
 }
 
var iosDev = Developer(name: "Emma", height: 160, weight: 47, gender: "Female", speciality: "IOS", exp: 0.5)

proffArray.append(iosDev)

for proff in proffArray {
    print(proff.say())
}

/*
7. –í—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —ç—Ç–æ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ(Google –≤ –ø–æ–º–æ—â—å).
 */ 
 
 for proff in proffArray.reversed() {
    print(proff.say())
}

/*
8. –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å "Alien" (–Ω–µ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫ –∫–ª–∞—Å—Å–∞ human!) —Å–æ —Å–≤–æ–∏–º–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ property (–æ—Ç–ª–∏—á–Ω—ã–º–∏ –æ—Ç people) –∏ –º–µ—Ç–æ–¥–æ–º "say" (–æ—Ç–ª–∏—á–Ω—ã–º –æ—Ç people).
 */

class Alien {

    let race: String
    var planet: String
    let quantityOfHands: Int
    
    init( race: String, planet: String, quantityOfHands: Int) {
        self.race = race
        self.planet = planet
        self.quantityOfHands = quantityOfHands
    }
    
    func say() -> String {
        "Say Hello and wave with \(quantityOfHands) hands."
    }
}

/*
9. –£–Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç –Ω–µ–≥–æ –∏ —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ä—É –¥—Ä—É–≥–∏—Ö –∫–ª–∞—Å—Å–æ–≤ (–ò–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω) —Å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –º–µ—Ç–æ–¥–æ–º "say".
 */

class Martien: Alien {

    override func say() -> String {
        super.say() + "I'm from \(planet)"
    }
}


class Avtons: Alien {

    override func say() -> String {
        super.say() + "I'm from \(planet). Nice to meet you!"
    }
}


class Vulcan: Alien {

    override func say() -> String {
        super.say() + "I'm from \(planet). We'vecome with peace üññ"
    }
}

var martien = Martien(race: "Martien", planet: "Mars", quantityOfHands: 4)
var avton = Avtons(race: "Avton", planet: "Polimer", quantityOfHands: 2)
var vulcan = Vulcan(race: "Vulcan", planet: "Volcano", quantityOfHands: 2)

/*
10. –û–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤—Å–µ—Ö Human –∏ Alien) –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤.
 */
 
extension Human: Speakers {}
extension Alien: Speakers {}

var array = [cook, manager, fighter, iosDev, martien, avton, vulcan] as [Speakers]


/*
11. –í —Ü–∏–∫–ª–µ –≤—ã–≤–æ–¥–∏—Ç—å —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ (Human –∏–ª–∏ Alien) –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –≤—ã–≤–æ–¥–∏—Ç—å –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥
 */

for obj in array {
    if obj is Human {
        print((obj as! Human).name + " is a Human")
    } else {
        print((obj as! Alien).race + " is a Alien")
    }
    print(obj.say())
}

    /* 
12. –ü–æ–º–µ—Å—Ç–∏—Ç—å –≤—Å–µ—Ö Human –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤, –∞ Alien  –≤ –¥—Ä—É–≥–æ–π –º–∞—Å—Å–∏–≤ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ Human –∏ Alien –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–∑–Ω–æ–µ)
 */

var human = [cook, manager, fighter, iosDev]
human.count
var alien = [martien, avton, vulcan]
alien.count


/*
13. –í –æ–¥–Ω–æ–º —Ü–∏–∫–ª–µ ‚Äúfor in‚Äù –≤—ã–≤–æ–¥–∏—Ç—å Human –∞ –ø–æ—Ç–æ–º Alien, –¥–æ—Å—Ç–∞–≤–∞—è –¥–∞–Ω–Ω—ã–µ –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ –∏–∑ –¥–≤—É—Ö —Ä–∞–∑–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤, –µ—Å–ª–∏ –≤ –æ–¥–Ω–æ–º –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –±–æ–ª—å—à–µ, —Ç–æ –≤ –∫–æ–Ω—Ü–µ –¥–æ–ª–∂–Ω—ã –≤—ã–≤–æ–¥–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç—ã —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ (—Ç–∞–∫ –∫–∞–∫ –¥—Ä—É–≥–∏—Ö —É–∂–µ –Ω–µ—Ç)
 */

for i in 0..<human.count {
    print(human[i])
    if alien.count > i {
        print(alien[i])
    }
}

/*
14. –°–æ–µ–¥–∏–Ω–∏—Ç—å –ú–∞—Ä—Å–∏–∞–Ω –∏ People –≤ –æ–¥–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.
 */ 

var mixRaces: Array <Speakers> = alien + human

/*
15. –ò—Å–ø–æ–ª—å–∑—É—è –Ω—É–∂–Ω—ã–π –º–µ—Ç–æ–¥ array  –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ (–∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –¥—Ä—É–≥–æ–π –º–∞—Å—Å–∏–≤). 
 */
 
print(mixRaces.sorted(by: {$0.say() > $1.say()}))

    /*
16. –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–∫: —Å–Ω–∞—á–∞–ª–∞ Human, –∞ –ø–æ—Ç–æ–º Alien, –ª—é–¥–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –∏–º–µ–Ω–∏, –∞ Alien –ø–æ —Ä–∞—Å–µ.
 */

var sortedArray:Array <Speakers> = human.sorted(by: {$0.name < $1.name}) + alien.sorted(by: {$0.race < $1.race})
print(sortedArray)

for obj in sortedArray {
    if obj is Human {
        print((obj as! Human).name + " is a Human")
    } else {
        print((obj as! Alien).race + " is a Alien")
    }
}
